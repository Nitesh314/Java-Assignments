Q1
Cocoa Confections is a small bakery that sells brownies, cookies, pies, and other
delicious treats to customers online. It keeps records of all of its online sales in an
SQL database that is automatically populated as customers places orders on its site.
In its database, Cocoa Confections has a customers table to keep track of customer
contact information, and an orders table to keep track of various orders that those
customers have placed. The schema of these tables is as follows:




		CREATE TABLE customers (
		customer_id INT PRIMARY KEY,
		first_name VARCHAR(255) NOT NULL,
		last_name VARCHAR(255) NOT NULL,
		email VARCHAR(255) NOT NULL,
		address VARCHAR(255) DEFAULT NULL,
		city VARCHAR(255) DEFAULT NULL,
		state VARCHAR(2) DEFAULT NULL,
		zip_code VARCHAR(5) DEFAULT NULL
		);
		
		
		CREATE TABLE orders (
		order_id INT PRIMARY KEY,
		customer_id INT NOT NULL,
		order_placed_date DATE NOT NULL,
		FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
		);
	

  insert into customers(customer_id,first_name,last_name,email,address,
  city,state,zip_code) values
     (1,'abc','a','abc@gmail.com','1st street','chennai','TN',60001),
     (2,'efg','e','efg@gmail.com','2nd street','Bangalore','KA',50002),
     (3,'ijk','e','ijk@gmail.com','3rd street','Mumbai','MH',40002);
		
		
		
	Orders:
+-----------+-----------------+--------------------------+
| order_id | customer_id | order_placed_date |
+-----------+-----------------+--------------------------+
| 1 | 1 | 2016-11-11 |
| 2 | 1 | 2016-10-01 |
| 3 | 2 | 2016-06-01 |
| 4 | 2 | 2015-06-01 |
| 5 | 1 | 2015-06-01 |
+----------+-------------+--------------------------------+	
		
		
		 insert into orders(order_id,customer_id,order_placed_date) values
	     (1,1,'2016-11-11'),
	     (2,1,'2016-10-01'),
	     (3,2,'2016-06-01'),
	     (4,2,'2015-06-01'),
	     (5,1,'2015-06-01');
	     
	     
It's the end of 2016, and the owner of Cocoa Confections wants to write an SQL
query that finds the COUNT of orders placed in 2016 by customer e-mail address.
She wants to ORDER the results by the COUNT of orders placed in 2016,
descending, so that she can personally send thank-you e-mails to Cocoa
Confection's top customers by order volume.
Can you write a query that will help the owner of Cocoa Confections find the
COUNT of all orders placed in 2016, by customer e-mail address, sorted
Descending?	     
	     
	     
	     
	ANS using joins=>     
	     
		select c.email AS customer_email,COUNT(o.order_id) AS COUNT_ORDER fro
		m customers c LEFT JOIN orders o ON c.customer_id=o.customer_id AND YEAR(ord
		er_placed_date)=2016 GROUP BY c.email ORDER BY COUNT_ORDER DESC;
		+----------------+-------------+
		| customer_email | COUNT_ORDER |
		+----------------+-------------+
		| abc@gmail.com  |           2 |
		| efg@gmail.com  |           1 |
		| ijk@gmail.com  |           0 |
		+----------------+-------------+	
		
    ANS using subqueris=>
    
    
    select email AS Customer_Email,(select COUNT(*)
     from orders o where o.customer_id=c.customer_id
      AND YEAR(order_placed_date)=2016)AS Order_Count
      from customers c order by Order_Count DESC;
		+----------------+-------------+
		| Customer_Email | Order_Count |
		+----------------+-------------+
		| abc@gmail.com  |           2 |
		| efg@gmail.com  |           1 |
		| ijk@gmail.com  |           0 |
		+----------------+-------------+
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		